generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DIRECT_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

model User{
  id        String    @id @unique
  username  String    @unique
  email     String    @unique
  create_at DateTime  @default(now())
  videos    Video[]
  likes     Like[]
  followers Follower[]
  comments  Comments[]
  chats     Chat[]
}

model Video {
  id        String    @id @default(dbgenerated("uuid_generate_v4()"))
  title     String  
  uri       String
  user_id   String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  like      Like[]
  create_at DateTime  @default(now())
  Comments  Comments[]
}

model Like {
  id            String    @id @default(dbgenerated("uuid_generate_v4()"))
  title         String  
  user_id       String
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  video_id      String    
  video         Video     @relation(fields: [video_id], references: [id], onDelete: Cascade)
  video_user_id String
  create_at     DateTime  @default(now())
}

model Follower {
  id                    String    @id @default(dbgenerated("uuid_generate_v4()"))
  user_id               String
  user                  User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  follower_user_id      String   
  create_at             DateTime  @default(now())
}

model Comments {
  id            String    @id @default(dbgenerated("uuid_generate_v4()"))
  user_id       String 
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "Comments_user_id_fkey")
  video_id      String
  video         Video     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "Comments_video_id_fkey")
  video_user_id String
  text          String
  create_at     DateTime  @default(now())
}

model Chat {
  id            String    @id @default(dbgenerated("uuid_generate_v4()"))
  user_id       String 
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chat_user_id  String
  users_key     String
  text          String
  create_at     DateTime  @default(now())
}






